using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace VaccineApp.Migrations
{
    public partial class extraLocationSeedsFixes : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 38, 194, 164, 83, 161, 225, 164, 58, 141, 243, 190, 61, 58, 10, 217, 156, 89, 157, 222, 158, 106, 127, 109, 226, 82, 94, 164, 143, 103, 70, 87, 158, 233, 92, 169, 223, 168, 12, 202, 183, 181, 106, 112, 94, 16, 54, 135, 107, 96, 225, 134, 15, 183, 56, 43, 177, 238, 190, 236, 234, 63, 230, 105, 112 }, new byte[] { 208, 177, 180, 161, 96, 7, 102, 231, 188, 127, 128, 252, 119, 9, 173, 122, 157, 16, 30, 84, 232, 171, 194, 23, 113, 189, 12, 151, 83, 120, 86, 9, 133, 188, 55, 32, 93, 219, 167, 33, 76, 0, 96, 84, 12, 33, 55, 105, 142, 218, 247, 133, 66, 190, 238, 95, 170, 160, 120, 102, 37, 112, 0, 22, 193, 132, 232, 163, 128, 162, 236, 220, 204, 145, 105, 242, 25, 232, 217, 170, 208, 147, 145, 102, 189, 120, 255, 73, 157, 32, 102, 7, 237, 125, 7, 5, 146, 215, 3, 205, 50, 224, 192, 144, 32, 108, 36, 50, 232, 104, 244, 252, 246, 229, 14, 136, 202, 167, 134, 54, 191, 121, 80, 19, 180, 152, 155, 157 } });

            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 38, 194, 164, 83, 161, 225, 164, 58, 141, 243, 190, 61, 58, 10, 217, 156, 89, 157, 222, 158, 106, 127, 109, 226, 82, 94, 164, 143, 103, 70, 87, 158, 233, 92, 169, 223, 168, 12, 202, 183, 181, 106, 112, 94, 16, 54, 135, 107, 96, 225, 134, 15, 183, 56, 43, 177, 238, 190, 236, 234, 63, 230, 105, 112 }, new byte[] { 208, 177, 180, 161, 96, 7, 102, 231, 188, 127, 128, 252, 119, 9, 173, 122, 157, 16, 30, 84, 232, 171, 194, 23, 113, 189, 12, 151, 83, 120, 86, 9, 133, 188, 55, 32, 93, 219, 167, 33, 76, 0, 96, 84, 12, 33, 55, 105, 142, 218, 247, 133, 66, 190, 238, 95, 170, 160, 120, 102, 37, 112, 0, 22, 193, 132, 232, 163, 128, 162, 236, 220, 204, 145, 105, 242, 25, 232, 217, 170, 208, 147, 145, 102, 189, 120, 255, 73, 157, 32, 102, 7, 237, 125, 7, 5, 146, 215, 3, 205, 50, 224, 192, 144, 32, 108, 36, 50, 232, 104, 244, 252, 246, 229, 14, 136, 202, 167, 134, 54, 191, 121, 80, 19, 180, 152, 155, 157 } });

            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 38, 194, 164, 83, 161, 225, 164, 58, 141, 243, 190, 61, 58, 10, 217, 156, 89, 157, 222, 158, 106, 127, 109, 226, 82, 94, 164, 143, 103, 70, 87, 158, 233, 92, 169, 223, 168, 12, 202, 183, 181, 106, 112, 94, 16, 54, 135, 107, 96, 225, 134, 15, 183, 56, 43, 177, 238, 190, 236, 234, 63, 230, 105, 112 }, new byte[] { 208, 177, 180, 161, 96, 7, 102, 231, 188, 127, 128, 252, 119, 9, 173, 122, 157, 16, 30, 84, 232, 171, 194, 23, 113, 189, 12, 151, 83, 120, 86, 9, 133, 188, 55, 32, 93, 219, 167, 33, 76, 0, 96, 84, 12, 33, 55, 105, 142, 218, 247, 133, 66, 190, 238, 95, 170, 160, 120, 102, 37, 112, 0, 22, 193, 132, 232, 163, 128, 162, 236, 220, 204, 145, 105, 242, 25, 232, 217, 170, 208, 147, 145, 102, 189, 120, 255, 73, 157, 32, 102, 7, 237, 125, 7, 5, 146, 215, 3, 205, 50, 224, 192, 144, 32, 108, 36, 50, 232, 104, 244, 252, 246, 229, 14, 136, 202, 167, 134, 54, 191, 121, 80, 19, 180, 152, 155, 157 } });

            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 38, 194, 164, 83, 161, 225, 164, 58, 141, 243, 190, 61, 58, 10, 217, 156, 89, 157, 222, 158, 106, 127, 109, 226, 82, 94, 164, 143, 103, 70, 87, 158, 233, 92, 169, 223, 168, 12, 202, 183, 181, 106, 112, 94, 16, 54, 135, 107, 96, 225, 134, 15, 183, 56, 43, 177, 238, 190, 236, 234, 63, 230, 105, 112 }, new byte[] { 208, 177, 180, 161, 96, 7, 102, 231, 188, 127, 128, 252, 119, 9, 173, 122, 157, 16, 30, 84, 232, 171, 194, 23, 113, 189, 12, 151, 83, 120, 86, 9, 133, 188, 55, 32, 93, 219, 167, 33, 76, 0, 96, 84, 12, 33, 55, 105, 142, 218, 247, 133, 66, 190, 238, 95, 170, 160, 120, 102, 37, 112, 0, 22, 193, 132, 232, 163, 128, 162, 236, 220, 204, 145, 105, 242, 25, 232, 217, 170, 208, 147, 145, 102, 189, 120, 255, 73, 157, 32, 102, 7, 237, 125, 7, 5, 146, 215, 3, 205, 50, 224, 192, 144, 32, 108, 36, 50, 232, 104, 244, 252, 246, 229, 14, 136, 202, 167, 134, 54, 191, 121, 80, 19, 180, 152, 155, 157 } });

            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 38, 194, 164, 83, 161, 225, 164, 58, 141, 243, 190, 61, 58, 10, 217, 156, 89, 157, 222, 158, 106, 127, 109, 226, 82, 94, 164, 143, 103, 70, 87, 158, 233, 92, 169, 223, 168, 12, 202, 183, 181, 106, 112, 94, 16, 54, 135, 107, 96, 225, 134, 15, 183, 56, 43, 177, 238, 190, 236, 234, 63, 230, 105, 112 }, new byte[] { 208, 177, 180, 161, 96, 7, 102, 231, 188, 127, 128, 252, 119, 9, 173, 122, 157, 16, 30, 84, 232, 171, 194, 23, 113, 189, 12, 151, 83, 120, 86, 9, 133, 188, 55, 32, 93, 219, 167, 33, 76, 0, 96, 84, 12, 33, 55, 105, 142, 218, 247, 133, 66, 190, 238, 95, 170, 160, 120, 102, 37, 112, 0, 22, 193, 132, 232, 163, 128, 162, 236, 220, 204, 145, 105, 242, 25, 232, 217, 170, 208, 147, 145, 102, 189, 120, 255, 73, 157, 32, 102, 7, 237, 125, 7, 5, 146, 215, 3, 205, 50, 224, 192, 144, 32, 108, 36, 50, 232, 104, 244, 252, 246, 229, 14, 136, 202, 167, 134, 54, 191, 121, 80, 19, 180, 152, 155, 157 } });

            migrationBuilder.UpdateData(
                table: "VaccinationCenters",
                keyColumn: "Id",
                keyValue: 14,
                column: "Location",
                value: "Provinciesteenweg 28, 3190 Boortmeerbeek");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 60, 212, 219, 2, 175, 195, 62, 71, 76, 153, 80, 237, 199, 31, 202, 92, 204, 47, 89, 53, 53, 115, 75, 33, 174, 11, 123, 222, 168, 239, 30, 166, 46, 125, 137, 30, 229, 24, 159, 164, 62, 191, 252, 238, 122, 150, 34, 106, 185, 230, 20, 128, 38, 128, 244, 225, 1, 176, 32, 95, 221, 206, 8, 61 }, new byte[] { 36, 26, 66, 56, 160, 152, 75, 14, 166, 169, 173, 87, 66, 41, 227, 52, 66, 146, 33, 250, 23, 86, 12, 217, 251, 171, 25, 222, 242, 61, 147, 122, 191, 48, 209, 149, 15, 164, 42, 200, 170, 41, 204, 162, 229, 218, 183, 86, 63, 25, 61, 7, 236, 142, 152, 129, 22, 64, 238, 242, 190, 91, 168, 240, 211, 40, 220, 116, 32, 42, 190, 84, 116, 240, 162, 34, 134, 185, 95, 155, 19, 150, 76, 115, 45, 136, 229, 173, 64, 14, 143, 46, 223, 191, 28, 30, 181, 175, 114, 76, 102, 86, 228, 233, 171, 38, 63, 98, 4, 218, 196, 234, 10, 254, 185, 249, 70, 199, 228, 190, 240, 125, 71, 171, 54, 57, 30, 168 } });

            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 60, 212, 219, 2, 175, 195, 62, 71, 76, 153, 80, 237, 199, 31, 202, 92, 204, 47, 89, 53, 53, 115, 75, 33, 174, 11, 123, 222, 168, 239, 30, 166, 46, 125, 137, 30, 229, 24, 159, 164, 62, 191, 252, 238, 122, 150, 34, 106, 185, 230, 20, 128, 38, 128, 244, 225, 1, 176, 32, 95, 221, 206, 8, 61 }, new byte[] { 36, 26, 66, 56, 160, 152, 75, 14, 166, 169, 173, 87, 66, 41, 227, 52, 66, 146, 33, 250, 23, 86, 12, 217, 251, 171, 25, 222, 242, 61, 147, 122, 191, 48, 209, 149, 15, 164, 42, 200, 170, 41, 204, 162, 229, 218, 183, 86, 63, 25, 61, 7, 236, 142, 152, 129, 22, 64, 238, 242, 190, 91, 168, 240, 211, 40, 220, 116, 32, 42, 190, 84, 116, 240, 162, 34, 134, 185, 95, 155, 19, 150, 76, 115, 45, 136, 229, 173, 64, 14, 143, 46, 223, 191, 28, 30, 181, 175, 114, 76, 102, 86, 228, 233, 171, 38, 63, 98, 4, 218, 196, 234, 10, 254, 185, 249, 70, 199, 228, 190, 240, 125, 71, 171, 54, 57, 30, 168 } });

            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 60, 212, 219, 2, 175, 195, 62, 71, 76, 153, 80, 237, 199, 31, 202, 92, 204, 47, 89, 53, 53, 115, 75, 33, 174, 11, 123, 222, 168, 239, 30, 166, 46, 125, 137, 30, 229, 24, 159, 164, 62, 191, 252, 238, 122, 150, 34, 106, 185, 230, 20, 128, 38, 128, 244, 225, 1, 176, 32, 95, 221, 206, 8, 61 }, new byte[] { 36, 26, 66, 56, 160, 152, 75, 14, 166, 169, 173, 87, 66, 41, 227, 52, 66, 146, 33, 250, 23, 86, 12, 217, 251, 171, 25, 222, 242, 61, 147, 122, 191, 48, 209, 149, 15, 164, 42, 200, 170, 41, 204, 162, 229, 218, 183, 86, 63, 25, 61, 7, 236, 142, 152, 129, 22, 64, 238, 242, 190, 91, 168, 240, 211, 40, 220, 116, 32, 42, 190, 84, 116, 240, 162, 34, 134, 185, 95, 155, 19, 150, 76, 115, 45, 136, 229, 173, 64, 14, 143, 46, 223, 191, 28, 30, 181, 175, 114, 76, 102, 86, 228, 233, 171, 38, 63, 98, 4, 218, 196, 234, 10, 254, 185, 249, 70, 199, 228, 190, 240, 125, 71, 171, 54, 57, 30, 168 } });

            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 60, 212, 219, 2, 175, 195, 62, 71, 76, 153, 80, 237, 199, 31, 202, 92, 204, 47, 89, 53, 53, 115, 75, 33, 174, 11, 123, 222, 168, 239, 30, 166, 46, 125, 137, 30, 229, 24, 159, 164, 62, 191, 252, 238, 122, 150, 34, 106, 185, 230, 20, 128, 38, 128, 244, 225, 1, 176, 32, 95, 221, 206, 8, 61 }, new byte[] { 36, 26, 66, 56, 160, 152, 75, 14, 166, 169, 173, 87, 66, 41, 227, 52, 66, 146, 33, 250, 23, 86, 12, 217, 251, 171, 25, 222, 242, 61, 147, 122, 191, 48, 209, 149, 15, 164, 42, 200, 170, 41, 204, 162, 229, 218, 183, 86, 63, 25, 61, 7, 236, 142, 152, 129, 22, 64, 238, 242, 190, 91, 168, 240, 211, 40, 220, 116, 32, 42, 190, 84, 116, 240, 162, 34, 134, 185, 95, 155, 19, 150, 76, 115, 45, 136, 229, 173, 64, 14, 143, 46, 223, 191, 28, 30, 181, 175, 114, 76, 102, 86, 228, 233, 171, 38, 63, 98, 4, 218, 196, 234, 10, 254, 185, 249, 70, 199, 228, 190, 240, 125, 71, 171, 54, 57, 30, 168 } });

            migrationBuilder.UpdateData(
                table: "Logins",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 60, 212, 219, 2, 175, 195, 62, 71, 76, 153, 80, 237, 199, 31, 202, 92, 204, 47, 89, 53, 53, 115, 75, 33, 174, 11, 123, 222, 168, 239, 30, 166, 46, 125, 137, 30, 229, 24, 159, 164, 62, 191, 252, 238, 122, 150, 34, 106, 185, 230, 20, 128, 38, 128, 244, 225, 1, 176, 32, 95, 221, 206, 8, 61 }, new byte[] { 36, 26, 66, 56, 160, 152, 75, 14, 166, 169, 173, 87, 66, 41, 227, 52, 66, 146, 33, 250, 23, 86, 12, 217, 251, 171, 25, 222, 242, 61, 147, 122, 191, 48, 209, 149, 15, 164, 42, 200, 170, 41, 204, 162, 229, 218, 183, 86, 63, 25, 61, 7, 236, 142, 152, 129, 22, 64, 238, 242, 190, 91, 168, 240, 211, 40, 220, 116, 32, 42, 190, 84, 116, 240, 162, 34, 134, 185, 95, 155, 19, 150, 76, 115, 45, 136, 229, 173, 64, 14, 143, 46, 223, 191, 28, 30, 181, 175, 114, 76, 102, 86, 228, 233, 171, 38, 63, 98, 4, 218, 196, 234, 10, 254, 185, 249, 70, 199, 228, 190, 240, 125, 71, 171, 54, 57, 30, 168 } });

            migrationBuilder.UpdateData(
                table: "VaccinationCenters",
                keyColumn: "Id",
                keyValue: 14,
                column: "Location",
                value: "Brouwerij Haacht, 3150 Haacht");
        }
    }
}
